{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fnil\fprq2\fcharset0 Mangal;}{\f4\fnil\fprq0\fcharset128 Mangal;}{\f5\froman\fprq0\fcharset128 ;}{\f6\fnil\fprq2\fcharset0 Microsoft YaHei;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red128\green128\blue128;}
{\stylesheet{\s0\snext0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105 Default;}
{\*\cs15\snext15\cf2\ul\ulc0\langfe255\lang255 Internet Link;}
{\s16\sbasedon0\snext17{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\hich\af3\langfe2052\dbch\af6\loch\f2\fs28\lang4105 Heading;}
{\s17\sbasedon0\snext17{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\hich\af0\langfe2052\dbch\af0\loch\f0\fs24\lang4105 Text body;}
{\s18\sbasedon17\snext18{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\hich\af4\langfe2052\dbch\af0\loch\f0\fs24\lang4105 List;}
{\s19\sbasedon0\snext19{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb120\sa120\cf0\i\hich\af4\langfe2052\dbch\af0\ai\loch\f0\fs24\lang4105 Caption;}
{\s20\sbasedon0\snext20{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af4\langfe2052\dbch\af0\loch\f0\fs24\lang4105 Index;}
}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice}{\vern4110}}\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\i\ai\rtlch \ltrch\loch
This history:}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
I have spent many years looking at various technical trading platforms and trading components as in charting, etc. Now is the time to actually code a real world trading strategy so I intend to use this as a roll model to generate these trading ideas. I am hoping these trading ideas will involve quant analysis. }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\i\ai\rtlch \ltrch\loch
To start:}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
Use the PDF from }{{\field{\*\fldinst HYPERLINK "http://stats.lse.ac.uk/kalogeropoulos/LD_1103.pdf#sthash.zOxvHOUY.dpuf" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf2\ul\ulc0\langfe255\rtlch \ltrch\loch\lang255
http://stats.lse.ac.uk/kalogeropoulos/LD_1103.pdf#sthash.zOxvHOUY.dpuf}{\rtlch \ltrch\loch
}} as a reference. No comments or further support will be provided once my workflow goal is complete. See below for these workflow details. }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\i\ai\rtlch \ltrch\loch
Rationale of this project:}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
There will be more wrong than right in this project as it is strictly for learning to reverse engineer a real world research paper from the banking industry. This is not to include items like charting or trading execution. I am not interested in the performance of this strategy either. As a result, I keep critics, haters, and trolls at bay. This is just to keep this process transparent no different than using an open source software project model. I just hope people will contribute to make this project/process better and even correct. If you fork this, please let me know so I can further learn from your work. }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\i\ai\rtlch \ltrch\loch
Why Mupad and Matlab for myself?\line }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
I find these tools make me more productive and get ideas coded faster as compared to open source language alternatives. This is not to be a technical flame war but this is just a personal preference. I can also extend Matlab scripts faster into other languages (i.e. Java, ..NET, Excel, C, C++, HDL) fastest via Simulink and Matlab Builder tools. Do searches for my research on these tools at }{{\field{\*\fldinst HYPERLINK "http://quantlabs.net/blog/" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf2\ul\ulc0\langfe255\rtlch \ltrch\loch\lang255
http://quantlabs.net/blog/}{\rtlch \ltrch\loch
}} or }{{\field{\*\fldinst HYPERLINK "https://www.youtube.com/user/quantlabs" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf2\ul\ulc0\langfe255\rtlch \ltrch\loch\lang255
https://www.youtube.com/user/quantlabs}}}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
I am also using this project as a test to my trading idea research workflow of:}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{{\field{\*\fldinst HYPERLINK "http://quantlabs.net/blog/2014/05/new-visual-and-rapid-workflow-from-db-forex-trading-strategy-to-matlab-to-c-c-or-fpga-for-lowerst-latency-hft-deployment/" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf2\ul\ulc0\langfe255\rtlch \ltrch\loch\lang255
http://quantlabs.net/blog/2014/05/new-visual-and-rapid-workflow-from-db-forex-trading-strategy-to-matlab-to-c-c-or-fpga-for-lowerst-latency-hft-deployment/}}}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
As a result, I am trying to 'rapidly' generate an algorithm with Mupad, generate custom M scripts, and implement into a systematic model with Simulink and Stateflow tools. Once complete, further code can be generated to C++, C, or even HDL (for potential FPGA deployment e.g. Verilog)}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
Note I currently use Matlab 2014a. }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\i\ai\rtlch \ltrch\loch
Where do go from here ? }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
Once I can deploy a trading model/strategy into C++ or C, I can generate Dynamic Linked Libraries (DLLs)  or libraries into my various trading components I have at }{{\field{\*\fldinst HYPERLINK "http://quantlabs.net/academy/" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf2\i0\ul\ulc0\langfe255\ai0\rtlch \ltrch\loch\lang255
http://quantlabs.net/academy/}{\rtlch \ltrch\loch
}} via my courses and memberships. }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\i\ai\rtlch \ltrch\loch
The files}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
The initial file package version includes my experimental Mupad Notebooks with generated Matlab M functions. These are definitely incomplete but will be updated as I correct them. There are 5 subfolders based on the Theories explained in the reference PDF from Deutsche Bank. I have also included note files for each folder.  }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
I hope this helps everyone and including myself,}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
Thanks Bryan }
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
QuantLabs.net}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af3\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang4105{\rtlch \ltrch\loch
}
\par }